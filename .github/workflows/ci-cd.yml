name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint
      
      - name: Run tests
        env:
          REDIS_URL: 'redis://localhost:6379'
        run: |
          export SUPABASE_URL="$SUPABASE_URL"
          export SUPABASE_SERVICE_KEY="$SUPABASE_SERVICE_KEY"
          export JWT_SECRET="$JWT_SECRET"
          export APPLE_WEBHOOK_SECRET="$APPLE_WEBHOOK_SECRET"
          export GOOGLE_WEBHOOK_SECRET="$GOOGLE_WEBHOOK_SECRET"
          npm test
  
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist
  
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set Docker image name
        id: docker_meta
        run: |
          echo "::set-output name=image::ghcr.io/${{ github.repository_owner }}/corp-astro-api"
          echo "::set-output name=tags::latest,${{ github.sha }}"
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ steps.docker_meta.outputs.image }}:latest
            ${{ steps.docker_meta.outputs.image }}:${{ github.sha }}
      
      # Add your deployment steps here
      # For example, deploy to a cloud provider like AWS, GCP, or Azure
      # Or use a service like Heroku, Render, or Railway
